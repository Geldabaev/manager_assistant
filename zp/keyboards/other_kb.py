from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from zp.data_base import read_sql
from aiogram.types.web_app_info import WebAppInfo

__all__ = ["mark_salary_mk", "ReplyKeyboardMarkup", "mk_groups_kb", "mk_go", "mk_cancel", "start_kb",
           "cancel_mk", "marks_mk", "ready_mk_stat", "mk_all_or_group_stat", "mk_group_stat", "mark_salary_mk_admin"]

from zp.diagrams import res_save_plot

start_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
conf_btn = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å üõ†")
run_btn = KeyboardButton("–ù–∞—á–∞—Ç—å ‚ö°")
getdoc_btn = KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç! üìÑ")
start_kb.add(run_btn).add(conf_btn).add(getdoc_btn)

mark_salary_mk = InlineKeyboardMarkup(row_width=2)
kb_mark_salary = [InlineKeyboardButton(text="–£—Ä–æ–∫ üìö", callback_data="lesson"), InlineKeyboardButton(text="–î–æ–ø. —É—Ä–æ–∫ üìù", callback_data='additional')]
mark_salary_mk.row(*kb_mark_salary).row(InlineKeyboardButton(text="–ë–∞–ª–ª—ã ü•á", callback_data="marks"), InlineKeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É üìä", callback_data="get_statistic"))


mark_salary_mk_admin = InlineKeyboardMarkup(row_width=2)
kb_mark_salary_admin = [InlineKeyboardButton(text="–£—Ä–æ–∫ üìö", callback_data="lesson"), InlineKeyboardButton(text="–î–æ–ø. —É—Ä–æ–∫ üìù", callback_data='additional')]
mark_salary_mk_admin.row(*kb_mark_salary).add(InlineKeyboardButton(text="–ó–ü üí∞", callback_data='salary')).row(InlineKeyboardButton(text="–ë–∞–ª–ª—ã ü•á", callback_data="marks"), InlineKeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É üìä", callback_data="get_statistic"))


mk_go = InlineKeyboardMarkup(row_width=1)
kb_zp = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="go")
mk_go.add(kb_zp)


async def mk_groups_kb(clb_data_command, webapp=False):
    "–í—ã–≤–æ–¥ –≥—Ä—É–ø–ø –∏–∑ –±–¥ –≤ –∫–Ω–æ–ø–∫–∞—Ö –∏–Ω–ª–∞–π–Ω"
    read = await read_sql('my_groups')
    groups_inline = []
    if read and not webapp:
        for ret in read:
            groups_inline.append(InlineKeyboardButton(text=ret[1] + " üéì", callback_data=f"{clb_data_command} {ret[0]}:{ret[1]}"))  # —É–∫–∞–∑—ã–≤–∞–µ–º id –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –∏—Ö id –≥—Ä—É–ø–ø—ã ret[0]
    elif webapp:
        for ret in read:
            groups_inline.append(InlineKeyboardButton(text=ret[1] + " üìä", callback_data=f"open_stat {ret[1]}"))  # —É–∫–∞–∑—ã–≤–∞–µ–º id –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –∏—Ö id –≥—Ä—É–ø–ø—ã ret[0]

    mk_groups = InlineKeyboardMarkup(row_width=2)

    for i in groups_inline:
        mk_groups.add(i)
    mk_groups.add(kb_zp)
    return mk_groups


mk_cancel = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add("–û—Ç–º–µ–Ω–∞")


ready_mk = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
ready_kb = KeyboardButton("–ì–æ—Ç–æ–≤–æ")
cancel_kb = KeyboardButton("–û—Ç–º–µ–Ω–∞")
ready_mk.add(ready_kb).add(cancel_kb)


cancel_mk = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
cancel_kb_one = KeyboardButton("–û—Ç–º–µ–Ω–∞")
cancel_mk.add(cancel_kb_one)


marks_mk = InlineKeyboardMarkup(row_width=2)
mark_kb1 = InlineKeyboardButton(text="–ü–æ–æ—â—Ä–∏—Ç—å", callback_data="encourage")
mark_kb2 = InlineKeyboardButton(text="–ó–∞–º–µ—á–∞–Ω–∏–µ", callback_data="reprimand")
marks_mk.row(mark_kb1, mark_kb2)


ready_mk_stat = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
end_kb_stat = KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å")
ready_mk_stat.add(end_kb_stat).add(cancel_kb)


mk_all_or_group_stat = InlineKeyboardMarkup(row_width=2)
kb_stats = [InlineKeyboardButton(text="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà", web_app=WebAppInfo(url=f"https://2187-2a03-d000-1481-f3f1-f6c9-2e26-e357-e2a3.ngrok-free.app/reg/other_groups")), InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã üìâ", callback_data="stat_group")]
mk_all_or_group_stat.row(*kb_stats).add(InlineKeyboardButton(text="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ png", callback_data="jpg_statistic")).add(kb_zp)


def mk_group_stat(name_group):
    mk_group_one = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb_group_one = KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", web_app=WebAppInfo(url=f"https://2187-2a03-d000-1481-f3f1-f6c9-2e26-e357-e2a3.ngrok-free.app/reg/{name_group}"))
    kb_image = KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã png")
    mk_group_one.add(kb_group_one).add(kb_image).add(cancel_kb)
    return mk_group_one
