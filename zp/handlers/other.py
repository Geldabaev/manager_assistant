from aiogram.dispatcher.filters import Text
from zp.keyboards import conf_settings, other_kb
from aiogram.dispatcher import FSMContext
from aiogram import types, Dispatcher
from zp.create_bot import bot


async def start(msg: types.Message):
    await bot.send_message(msg.chat.id, "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üî•", reply_markup=other_kb.start_kb)


async def settings(msg: types.Message):
    if msg.from_user.id == 5295520075:
        await bot.send_message(msg.chat.id, "—á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ö–æ—Ç–∏—Ç–µ? üíÅ‚Äç‚ôÇÔ∏è", reply_markup=conf_settings.markup_add_del)
    else:
        await msg.answer("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", reply_markup=other_kb.start_kb)


# –í—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≥–¥–µ –±—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=other_kb.start_kb)


async def cancel_no_fsm(msg: types.Message):
    await bot.send_message(msg.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=other_kb.start_kb)


def register_handlers_other(dp: Dispatcher):
    dp.register_message_handler(start, commands=['start', 'help'])
    dp.register_message_handler(cancel_handler, state="*", commands='–û—Ç–º–µ–Ω–∞')
    dp.register_message_handler(cancel_no_fsm, text='–û—Ç–º–µ–Ω–∞')
    dp.register_message_handler(cancel_handler, Text(equals='–û—Ç–º–µ–Ω–∞', ignore_case=True), state="*")
    dp.register_message_handler(settings, text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å üõ†")
